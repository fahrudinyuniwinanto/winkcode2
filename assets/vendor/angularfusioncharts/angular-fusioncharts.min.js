/*! angularjs-fusioncharts - v4.0.2*/

!function(){var a,b,c=angular.module("ng-fusioncharts",[]),d={width:"@",height:"@",data:"@",dataset:"@",categories:"@",chart:"@",linkeddata:"@",trendlines:"@",vtrendlines:"@",annotations:"@",colorrange:"@",lineset:"@",axis:"@",connectors:"@",pointers:"@",value:"@",processes:"@",tasks:"@",rows:"@",columns:"@",map:"@",markers:"@",initialized:"&"},e=["beforelinkeditemopen","linkeditemopened","beforelinkeditemclose","linkeditemclosed","printreadystatechange","dataloadrequestcompleted","dataloaderror","dataloadcancelled","dataloadrequestcancelled","dataupdated","dataupdatecancelled","dataloadrequested","beforedataupdate","realtimeupdatecomplete","chartcleared","slicingend","slicingstart","entityrollout","entityrollover","entityclick","connectorrollover","connectorrollout","connectorclick","markerrollover","markerrollout","markerclick","pagenavigated","rotationend","rotationstart","centerlabelrollover","centerlabelrollout","centerlabelclick","centerlabelchanged","chartclick","chartmousemove","chartrollover","chartrollout","backgroundloaded","backgroundloaderror","legenditemclicked","legenditemrollover","legenditemrollout","logorollover","logorollout","logoclick","logoloaded","logoloaderror","beforeexport","exported","exportcancelled","beforeprint","printcomplete","printcancelled","datalabelclick","datalabelrollover","datalabelrollout","scrollstart","scrollend","onscroll","zoomreset","zoomedout","zoomedin","zoomed","zoommodechanged","pinned","datarestored","beforedatasubmit","datasubmiterror","datasubmitted","datasubmitcancelled","chartupdated","nodeadded","nodeupdated","nodedeleted","connectoradded","connectorupdated","connectordeleted","labeladded","labeldeleted","selectionremoved","selectionstart","selectionend","labelclick","labelrollover","labelrollout","labeldragstart","labeldragend","dataplotdragstart","dataplotdragend","processclick","processrollover","processrollout","categoryclick","categoryrollover","categoryrollout","milestoneclick","milestonerollover","milestonerollout","charttypechanged","overlaybuttonclick","loaded","rendered","drawcomplete","rendercomplete","datainvalid","dataxmlinvalid","dataloaded","nodatatodisplay","legendpointerdragstart","legendpointerdragstop","legendrangeupdated","alertcomplete","realtimeupdateerror","dataplotrollover","dataplotrollout","dataplotclick","linkclicked","beforerender","rendercancelled","beforeresize","resized","resizecancelled","beforedispose","disposed","disposecancelled","linkedchartinvoked","beforedrilldown","drilldown","beforedrillup","drillup","drilldowncancelled","drillupcancelled"],f=e.length;for(a=0;a<f;a++)b="fcevent"+e[a][0].toUpperCase()+e[a].slice(1),d[b]="&";c.directive("fusioncharts",["$http",function(c){return{scope:d,link:function(c,d,g){var h,i,j,k,l,m,n,o,p,q,r,s={NDCObserver:{width:{ifExist:!1,observer:function(a){a&&n.width!=a&&(n.width=a,v.resizeTo(c.width,c.height))}},height:{ifExist:!1,observer:function(a){a&&n.height!=a&&(n.height=a,v.resizeTo(c.width,c.height))}},datasource:{ifExist:!0,observer:function(a){z.dataSource!=a&&(z.dataSource=a,"json"===n.dataFormat?(n.dataSource=JSON.parse(a),x()):(n.dataSource=a,"xml"===n.dataFormat?v.setXMLData(a):"jsonurl"===n.dataFormat?v.setJSONUrl(a):"xmlurl"===n.dataFormat&&v.setXMLUrl(a)))}},type:{ifExist:!1,observer:function(a){a&&n.type!=a&&(n.type=a,v.chartType(a))}},config:{ifExist:!1,observer:function(a){var b,c,d=!1;if(a){b=JSON.parse(a);for(c in b)n[c]!=b[c]&&(d=!0,n[c]=b[c]);d&&y()}}}},DCObserver:{chart:{ifExist:!0,observer:function(a){"json"===n.dataFormat&&"object"==typeof n.dataSource&&z.chart!=a&&(z.chart=a,n.dataSource.chart=JSON.parse(a),x())}},data:{ifExist:!0,observer:function(a){"json"===n.dataFormat&&"object"==typeof n.dataSource&&z.data!=a&&(z.data=a,n.dataSource.data=JSON.parse(a),x())}},categories:{ifExist:!0,observer:function(a){"json"===n.dataFormat&&"object"==typeof n.dataSource&&z.categories!=a&&(z.categories=a,n.dataSource.categories=JSON.parse(a),x())}},dataset:{ifExist:!0,observer:function(a){"json"===n.dataFormat&&"object"==typeof n.dataSource&&z.dataset!=a&&(z.dataset=a,n.dataSource.dataset=JSON.parse(a),x())}},linkeddata:{ifExist:!0,observer:function(a){"json"===n.dataFormat&&"object"==typeof n.dataSource&&z.linkeddata!=a&&(z.linkeddata=a,n.dataSource.linkeddata=JSON.parse(a),x())}},trendlines:{ifExist:!0,observer:function(a){"json"===n.dataFormat&&"object"==typeof n.dataSource&&z.trendlines!=a&&(z.trendlines=a,n.dataSource.trendlines=JSON.parse(a),x())}},vtrendlines:{ifExist:!0,observer:function(a){"json"===n.dataFormat&&"object"==typeof n.dataSource&&z.vtrendlines!=a&&(z.vtrendlines=a,n.dataSource.vtrendlines=JSON.parse(a),x())}},annotations:{ifExist:!0,observer:function(a){"json"===n.dataFormat&&"object"==typeof n.dataSource&&z.annotations!=a&&(z.annotations=a,n.dataSource.annotations=JSON.parse(a),x())}},colorrange:{ifExist:!0,observer:function(a){"json"===n.dataFormat&&"object"==typeof n.dataSource&&z.colorrange!=a&&(z.colorrange=a,n.dataSource.colorrange=JSON.parse(a),x())}},lineset:{ifExist:!0,observer:function(a){"json"===n.dataFormat&&"object"==typeof n.dataSource&&z.lineset!=a&&(z.lineset=a,n.dataSource.lineset=JSON.parse(a),x())}},axis:{ifExist:!0,observer:function(a){"json"===n.dataFormat&&"object"==typeof n.dataSource&&z.axis!=a&&(z.axis=a,n.dataSource.axis=JSON.parse(a),x())}},connectors:{ifExist:!0,observer:function(a){"json"===n.dataFormat&&"object"==typeof n.dataSource&&z.connectors!=a&&(z.connectors=a,n.dataSource.connectors=JSON.parse(a),x())}},pointers:{ifExist:!0,observer:function(a){"json"===n.dataFormat&&"object"==typeof n.dataSource&&z.pointers!=a&&(z.pointers=a,n.dataSource.pointers=JSON.parse(a),x())}},value:{ifExist:!0,observer:function(a){"json"===n.dataFormat&&"object"==typeof n.dataSource&&z.value!=a&&(z.value=a,n.dataSource.value=JSON.parse(a),x())}},processes:{ifExist:!0,observer:function(a){"json"===n.dataFormat&&"object"==typeof n.dataSource&&z.processes!=a&&(z.processes=a,n.dataSource.processes=JSON.parse(a),x())}},tasks:{ifExist:!0,observer:function(a){"json"===n.dataFormat&&"object"==typeof n.dataSource&&z.tasks!=a&&(z.tasks=a,n.dataSource.tasks=JSON.parse(a),x())}},rows:{ifExist:!0,observer:function(a){"json"===n.dataFormat&&"object"==typeof n.dataSource&&z.rows!=a&&(z.rows=a,n.dataSource.rows=JSON.parse(a),x())}},columns:{ifExist:!0,observer:function(a){"json"===n.dataFormat&&"object"==typeof n.dataSource&&z.columns!=a&&(z.columns=a,n.dataSource.columns=JSON.parse(a),x())}},map:{ifExist:!0,observer:function(a){"json"===n.dataFormat&&"object"==typeof n.dataSource&&z.map!=a&&(z.map=a,n.dataSource.map=JSON.parse(a),x())}},markers:{ifExist:!0,observer:function(a){"json"===n.dataFormat&&"object"==typeof n.dataSource&&z.markers!=a&&(z.markers=a,n.dataSource.markers=JSON.parse(a),x())}}}},t={},u=Object.keys(g),v=null,w={"*":function(a,b){t.hasOwnProperty(a.eventType)&&t[a.eventType](a,b)}},x=function(){h&&clearTimeout(h),h=setTimeout(function(){v&&v.setJSONData&&v.setJSONData(n.dataSource)},0)},y=function(){for(v&&v.dispose&&v.dispose(),v=new FusionCharts(n),c.initialized&&c.initialized({chart:v}),a=0;a<f;a++)b="fcevent"+e[a][0].toUpperCase()+e[a].slice(1),function(b){v.addEventListener(e[a],function(a,d){c[b]&&c[b]({event:a,args:d})})}(b);angular.element(document).ready(function(){d.ready(function(){v=v.render(),c[g.chartobject]=v})})},z={};if(g.events){for(q=g.events.split("."),r=q.length,k=c.$parent,i=0;i<r;i+=1)k=k&&k[q[i]];if(k)for(l in k)k.hasOwnProperty(l)&&(t[l.toLowerCase()]=k[l])}for(i=0;i<u.length;i++)j=u[i],j.match(/^on/i)&&(l=j.slice(2).toLowerCase(),t[l]=c.$parent[g[j]]);n={type:g.type,width:g.width,height:g.height,renderAt:d[0],id:g.chartid,dataFormat:g.dataformat||"json",dataSource:{},events:w};for(m in s.NDCObserver)attrConfig=s.NDCObserver[m],(!1===attrConfig.ifExist||g[m])&&g.$observe(m,attrConfig.observer);g.datasource&&(n.dataSource="json"===n.dataFormat?JSON.parse(g.datasource):g.datasource,z.dataSource=g.datasource);for(m in s.DCObserver)attrConfig=s.DCObserver[m],p=g[m],p?(g.$observe(m,attrConfig.observer),z[m]=p,"json"===n.dataFormat&&"object"==typeof n.dataSource&&(n.dataSource[m]=JSON.parse(p))):!1===attrConfig.ifExist&&g.$observe(m,attrConfig.observer);if(g.config){o=JSON.parse(g.config);for(j in o)n[j]=o[j]}y(),c.$on("$destroy",function(){v&&v.dispose&&v.dispose()})}}}])}();